services:
  namenode:
    image: apache/hadoop:3
    hostname: namenode
    container_name: namenode
    command: bash -c "echo 'Y' | hdfs namenode -format && hdfs namenode"
    ports:
      - "9870:9870"
      - "9000:9000"
    volumes:
      - ./hadoop_data/namenode:/hadoop/dfs/name
      - ./config:/opt/hadoop/etc/hadoop
    environment:
      - HADOOP_USER_NAME=root
      - HDFS_NAMENODE_USER=root
      - HDFS_DATANODE_USER=root
      - HDFS_SECONDARYNAMENODE_USER=root
      - HADOOP_CONF_DIR=/opt/hadoop/etc/hadoop
      - HADOOP_LOG_DIR=/opt/hadoop/logs
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    user: "0"
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
      
  datanode1:
    image: apache/hadoop:3
    hostname: datanode1
    container_name: datanode1
    command: bash -c "rm -rf /hadoop/dfs/data/* && hdfs datanode"
    volumes:
      - ./hadoop_data/datanode:/hadoop/dfs/data
      - ./config:/opt/hadoop/etc/hadoop
    environment:
      - HADOOP_USER_NAME=root
      - HDFS_NAMENODE_USER=root
      - HDFS_DATANODE_USER=root
      - HADOOP_CONF_DIR=/opt/hadoop/etc/hadoop
      - HADOOP_LOG_DIR=/opt/hadoop/logs
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    user: "0"
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G

    depends_on:
      - namenode

  resourcemanager:
    image: apache/hadoop:3
    hostname: resourcemanager
    container_name: resourcemanager
    command: ["yarn", "resourcemanager"]
    ports:
      - "8088:8088"
    volumes:
      - ./config:/opt/hadoop/etc/hadoop
    environment:
      - HADOOP_LOG_DIR=/opt/hadoop/logs
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G

    depends_on:
      - namenode
      - datanode1

  nodemanager:
    image: apache/hadoop:3
    hostname: nodemanager
    container_name: nodemanager
    command: ["yarn", "nodemanager"]
    volumes:
      - ./config:/opt/hadoop/etc/hadoop
    environment:
      - HADOOP_LOG_DIR=/opt/hadoop/logs
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G

    depends_on:
      - namenode
      - datanode1
      - resourcemanager

  spark-master:
    image: apache/spark:3.5.1
    hostname: spark-master
    container_name: spark-master
    command: "/opt/spark/bin/spark-class org.apache.spark.deploy.master.Master"
    ports:
      - "8080:8080"
      - "7077:7077"
    volumes:
      - ./config:/opt/hadoop/etc/hadoop
      - ./spark_data/logs:/opt/spark/logs
    environment:
      - SPARK_NO_DAEMONIZE=true
      - HADOOP_USER_NAME=root
      - HADOOP_CONF_DIR=/opt/hadoop/etc/hadoop
      - SPARK_MASTER_HOST=spark-master
      - SPARK_MASTER_PORT=7077
      - SPARK_MASTER_WEBUI_PORT=8080
      - SPARK_LOG_DIR=/opt/spark/logs
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G

    depends_on:
      - namenode
      - resourcemanager

  spark-worker:
    image: apache/spark:3.5.1
    hostname: spark-worker
    container_name: spark-worker
    command: "/opt/spark/bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077"
    ports:
      - "8081:8081"
    volumes:
      - ./config:/opt/hadoop/etc/hadoop
      - ./spark_data/logs:/opt/spark/logs
      - ./spark_data/work:/opt/spark/work
    environment:
      - SPARK_NO_DAEMONIZE=true
      - HADOOP_USER_NAME=root
      - HADOOP_CONF_DIR=/opt/hadoop/etc/hadoop
      - SPARK_WORKER_WEBUI_PORT=8081
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_LOG_DIR=/opt/spark/logs
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G

    depends_on:
      - spark-master

  hive-metastore:
    image: apache/hive:3.1.3
    hostname: hive-metastore
    container_name: hive-metastore
    command: bash -c "mkdir -p /opt/hive/logs /home/hive && chown -R hive:hive /home/hive /opt/hive/logs && chmod 777 /home/hive && /opt/hive/bin/schematool -dbType derby -initSchema && /opt/hive/bin/hive --service metastore"
    ports:
      - "9083:9083"
    volumes:
      - ./config:/opt/hadoop/etc/hadoop
      - ./hive-config:/opt/hive/conf
      - ./hive-data:/opt/hive/data
      - hive_home:/home/hive
      - ./config/log4j.properties:/opt/hadoop/etc/hadoop/log4j.properties
    environment:
      - HADOOP_USER_NAME=root
      - HADOOP_CONF_DIR=/opt/hadoop/etc/hadoop
      - HIVE_CONF_DIR=/opt/hive/conf
      - HIVE_LOG_DIR=/opt/hive/logs
      - HADOOP_OPTS=-Dlog4j.configuration=file:///opt/hadoop/etc/hadoop/log4j.properties
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    depends_on:
      - namenode
      - datanode1

  hive-server:
    image: apache/hive:3.1.3
    hostname: hive-server
    container_name: hive-server
    command: bash -c "mkdir -p /opt/hive/logs /home/hive && chown -R hive:hive /home/hive /opt/hive/logs && chmod 777 /home/hive && /opt/hive/bin/hive --service hiveserver2"
    ports:
      - "10000:10000"
      - "10002:10002"
    volumes:
      - ./config:/opt/hadoop/etc/hadoop
      - ./hive-config:/opt/hive/conf
      - ./hive-data:/opt/hive/data
      - hive_home:/home/hive
      - ./config/log4j.properties:/opt/hadoop/etc/hadoop/log4j.properties
    environment:
      - HADOOP_USER_NAME=root
      - HADOOP_CONF_DIR=/opt/hadoop/etc/hadoop
      - HIVE_CONF_DIR=/opt/hive/conf
      - HIVE_LOG_DIR=/opt/hive/logs
      - HADOOP_OPTS=-Dlog4j.configuration=file:///opt/hadoop/etc/hadoop/log4j.properties
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    depends_on:
      - hive-metastore

volumes:
  hive_home:
    driver: local
